package cz.artique.shared.model.item;

import java.io.Serializable;
import java.util.Date;

import org.slim3.datastore.Attribute;
import org.slim3.datastore.Model;

import com.google.appengine.api.datastore.Text;

import cz.artique.server.crawler.PageChangeCrawler;
import cz.artique.shared.model.source.PageChangeSource;
import cz.artique.shared.model.source.Source;

/**
 * Type of {@link Item} provided by {@link PageChangeSource} and generated by
 * {@link PageChangeCrawler}. {@link PageChangeItem} extends general
 * {@link Item}; adds
 * following attributes:
 * <ul>
 * <li>Diff - difference of old and new text content
 * <li>Diff type - content type of diff; currently only {@link ContentType#HTML}
 * is supported
 * <li>Compared to - date of check the content is different of
 * </ul>
 * 
 * @author Adam Juraszek
 * 
 */
@Model(schemaVersion = 1)
public class PageChangeItem extends Item implements Serializable {

	private static final long serialVersionUID = 1L;

	/**
	 * Full diff of change
	 */
	@Attribute(unindexed = true)
	private Text diff;

	@Attribute(unindexed = true)
	private ContentType diffType;

	/**
	 * Diff was created against page of this date
	 */
	@Attribute(unindexed = true)
	private Date comparedTo;

	/**
	 * Default constructor for slim3 framework.
	 */
	public PageChangeItem() {}

	/**
	 * Constructor just calling constructor of super-type:
	 * {@link Item#Item(Source)}.
	 * 
	 * @param source
	 */
	public PageChangeItem(Source source) {
		super(source);
	}

	/**
	 * @return date of check the content is different of
	 */
	public Date getComparedTo() {
		return comparedTo;
	}

	/**
	 * @return marked-up difference of old and new content
	 */
	public Text getDiff() {
		return diff;
	}

	/**
	 * @param comparedTo
	 *            date of check the content is different of
	 */
	public void setComparedTo(Date comparedTo) {
		this.comparedTo = comparedTo;
	}

	/**
	 * @param diff
	 *            marked-up difference of old and new content
	 */
	public void setDiff(Text diff) {
		this.diff = diff;
	}

	/**
	 * @return MIME type of diff, currently only {@link ContentType#HTML}
	 */
	public ContentType getDiffType() {
		return diffType;
	}

	/**
	 * @param diffType
	 *            MIME type of diff, currently only {@link ContentType#HTML}
	 */
	public void setDiffType(ContentType diffType) {
		this.diffType = diffType;
	}

}
